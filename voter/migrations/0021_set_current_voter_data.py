# Generated by Django 2.0.4 on 2018-04-12 15:42

from django.db import migrations


def build_current(voter):
    data = {}
    for change in voter.changelog_set:
        data.update(change.data)
    return data


def set_current_voter_data(apps, schema):
    NCVoter = apps.get_model('voter.NCVoter')

    # Boy is this going to be slow.
    # We could not bother with this migration. The next time data is
    # imported for each voter, their .data will get set anyway.

    # If we do do it:
    # Only do it for voters who have no data yet.
    # Question: is prefetch_related going to make this run out of memory on real data?
    for voter in NCVoter.objects.filter(data=None).prefetch_related('changelog_set').iterator():
        voter.data = build_current(voter)
        voter.save(update_fields=['data'])


class Migration(migrations.Migration):

    dependencies = [
        ('voter', '0020_auto_20180412_1542'),
    ]

    operations = [
        migrations.RunPython(set_current_voter_data, migrations.RunPython.noop)
    ]
